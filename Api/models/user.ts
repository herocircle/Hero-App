/* tslint:disable */
/* eslint-disable */
/**
 * hero-circle-api
 * The Hero Circle API description
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

import { Bio } from './bio';
import { Care } from './care';
import { Circle } from './circle';
import { ClimateWins } from './climate-wins';
import { GoogleProfile } from './google-profile';
import { SkillType } from './skill-type';
import { SubscriptionReminder } from './subscription-reminder';
 /**
 * 
 *
 * @export
 * @interface User
 */
export interface User {

    /**
     * @type {string}
     * @memberof User
     */
    id: string;

    /**
     * @type {string}
     * @memberof User
     */
    registerType: UserRegisterTypeEnum;

    /**
     * @type {GoogleProfile}
     * @memberof User
     */
    google?: GoogleProfile;

    /**
     * @type {string}
     * @memberof User
     */
    firstname: string;

    /**
     * @type {string}
     * @memberof User
     */
    lastname: string;

    /**
     * @type {string}
     * @memberof User
     */
    email: string;

    /**
     * @type {string}
     * @memberof User
     */
    password: string;

    /**
     * @type {Bio}
     * @memberof User
     */
    bio?: Bio;

    /**
     * @type {string}
     * @memberof User
     */
    accountId: string;

    /**
     * @type {string}
     * @memberof User
     */
    customerId: string;

    /**
     * @type {boolean}
     * @memberof User
     */
    privateAccount: boolean;

    /**
     * @type {boolean}
     * @memberof User
     */
    active: boolean;

    /**
     * @type {Array<string>}
     * @memberof User
     */
    badges: Array<UserBadgesEnum>;

    /**
     * @type {string}
     * @memberof User
     */
    role: UserRoleEnum;

    /**
     * @type {string}
     * @memberof User
     */
    avatar?: string;

    /**
     * @type {string}
     * @memberof User
     */
    audio?: string;

    /**
     * @type {string}
     * @memberof User
     */
    video?: string;

    /**
     * @type {string}
     * @memberof User
     */
    cover?: string;

    /**
     * @type {string}
     * @memberof User
     */
    facebook: string;

    /**
     * @type {string}
     * @memberof User
     */
    linkedin: string;

    /**
     * @type {string}
     * @memberof User
     */
    instagram: string;

    /**
     * @type {string}
     * @memberof User
     */
    twitter: string;

    /**
     * @type {string}
     * @memberof User
     */
    website: string;

    /**
     * @type {number}
     * @memberof User
     */
    order?: number;

    /**
     * @type {string}
     * @memberof User
     */
    tiktok: string;

    /**
     * @type {string}
     * @memberof User
     */
    youtube: string;

    /**
     * @type {string}
     * @memberof User
     */
    country: string;

    /**
     * @type {string}
     * @memberof User
     */
    city: string;

    /**
     * @type {string}
     * @memberof User
     */
    description: string;

    /**
     * @type {string}
     * @memberof User
     */
    passwordtoken: string;

    /**
     * @type {Date}
     * @memberof User
     */
    tokenvalid: Date;

    /**
     * @type {string}
     * @memberof User
     */
    username: string;

    /**
     * @type {boolean}
     * @memberof User
     */
    updates: boolean;

    /**
     * @type {boolean}
     * @memberof User
     */
    acceptsCookies: boolean;

    /**
     * @type {Circle}
     * @memberof User
     */
    circle?: Circle;

    /**
     * @type {boolean}
     * @memberof User
     */
    hasPassword: boolean;

    /**
     * @type {string}
     * @memberof User
     */
    isactive: string;

    /**
     * @type {Array<string>}
     * @memberof User
     */
    skills?: Array<string>;

    /**
     * @type {Array<string>}
     * @memberof User
     */
    cares?: Array<string>;

    /**
     * @type {Array<string>}
     * @memberof User
     */
    tags: Array<string>;

    /**
     * @type {boolean}
     * @memberof User
     */
    status: boolean;

    /**
     * @type {string}
     * @memberof User
     */
    referralId?: string;

    /**
     * @type {string}
     * @memberof User
     */
    whatsapp?: string;

    /**
     * @type {string}
     * @memberof User
     */
    tokenValidation: string;

    /**
     * @type {boolean}
     * @memberof User
     */
    isPayoutReady: boolean;

    /**
     * @type {number}
     * @memberof User
     */
    pendingPayout: number;

    /**
     * @type {number}
     * @memberof User
     */
    subjectToVat: number;

    /**
     * @type {Array<string>}
     * @memberof User
     */
    followers: Array<string>;

    /**
     * @type {Array<string>}
     * @memberof User
     */
    follows: Array<string>;

    /**
     * @type {string}
     * @memberof User
     */
    locale: string;

    /**
     * @type {string}
     * @memberof User
     */
    organization: string;

    /**
     * @type {string}
     * @memberof User
     */
    slug: string;

    /**
     * @type {string}
     * @memberof User
     */
    linkedinToken: string;

    /**
     * @type {Array<Care>}
     * @memberof User
     */
    cares: Array<Care>;

    /**
     * @type {Array<SkillType>}
     * @memberof User
     */
    skills: Array<SkillType>;

    /**
     * @type {string}
     * @memberof User
     */
    fullName?: string;

    /**
     * @type {string}
     * @memberof User
     */
    referralLink?: string;

    /**
     * @type {Date}
     * @memberof User
     */
    createdAt: Date;

    /**
     * @type {Date}
     * @memberof User
     */
    updatedAt: Date;

    /**
     * @type {SubscriptionReminder}
     * @memberof User
     */
    subscriptionReminder?: SubscriptionReminder;

    /**
     * @type {string}
     * @memberof User
     */
    affiliateOrganization: string;

    /**
     * @type {string}
     * @memberof User
     */
    organizationBanner?: string;

    /**
     * @type {Array<any>}
     * @memberof User
     */
    tasks: Array<any>;

    /**
     * @type {string}
     * @memberof User
     */
    organizationName: string;

    /**
     * @type {string}
     * @memberof User
     */
    organizationAccent: string;

    /**
     * @type {ClimateWins}
     * @memberof User
     */
    climateWins?: ClimateWins;

    /**
     * @type {string}
     * @memberof User
     */
    mobilizerMainTopic: UserMobilizerMainTopicEnum;

    /**
     * @type {string}
     * @memberof User
     */
    mobilizerType: UserMobilizerTypeEnum;

    /**
     * @type {number}
     * @memberof User
     */
    referredVisitors: number;

    /**
     * @type {number}
     * @memberof User
     */
    descriptionSize: number;

    /**
     * @type {boolean}
     * @memberof User
     */
    featured: boolean;
}

/**
 * @export
 * @enum {string}
 */
export enum UserRegisterTypeEnum {
    Standard = 'standard',
    Google = 'google'
}
/**
 * @export
 * @enum {string}
 */
export enum UserBadgesEnum {
    Amplifier = 'Amplifier',
    Ambassador = 'Ambassador',
    Connections = 'Connections',
    PolicySupport = 'PolicySupport',
    Influence = 'Influence',
    WellBeing = 'WellBeing',
    StartedFromTheBottom = 'StartedFromTheBottom',
    MommaImUp = 'MommaImUp'
}
/**
 * @export
 * @enum {string}
 */
export enum UserRoleEnum {
    SUPPORTER = 'SUPPORTER',
    MOBILIZER = 'MOBILIZER',
    ADMIN = 'ADMIN',
    LEADADMIN = 'LEAD-ADMIN',
    SUPERMOBILIZER = 'SUPER-MOBILIZER',
    AMBASSADOR = 'AMBASSADOR',
    PARTNER = 'PARTNER',
    ORGANIZATION = 'ORGANIZATION',
    TRIAL = 'TRIAL',
    TRIALSUPPORTER = 'TRIAL-SUPPORTER'
}
/**
 * @export
 * @enum {string}
 */
export enum UserMobilizerMainTopicEnum {
    ForestLand = 'Forest & Land',
    Governance = 'Governance',
    Power = 'Power',
    CircularEconomy = 'Circular Economy',
    Finance = 'Finance'
}
/**
 * @export
 * @enum {string}
 */
export enum UserMobilizerTypeEnum {
    CAMPAIGNER = 'CAMPAIGNER',
    RESEARCHER = 'RESEARCHER',
    POLICYCHANGER = 'POLICY_CHANGER',
    EDUCATOR = 'EDUCATOR'
}

