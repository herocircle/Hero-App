/* tslint:disable */
/* eslint-disable */
/**
 * hero-circle-api
 * The Hero Circle API description
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

import { ActionProposal } from './action-proposal';
import { CircleType } from './circle-type';
import { User } from './user';
 /**
 * 
 *
 * @export
 * @interface Circle
 */
export interface Circle {

    /**
     * @type {string}
     * @memberof Circle
     */
    slug: string;

    /**
     * @type {boolean}
     * @memberof Circle
     */
    main: boolean;

    /**
     * @type {boolean}
     * @memberof Circle
     */
    global: boolean;

    /**
     * @type {string}
     * @memberof Circle
     */
    name: string;

    /**
     * @type {string}
     * @memberof Circle
     */
    goal: string;

    /**
     * @type {string}
     * @memberof Circle
     */
    description: string;

    /**
     * @type {string}
     * @memberof Circle
     */
    type: string;

    /**
     * @type {string}
     * @memberof Circle
     */
    user: string;

    /**
     * @type {string}
     * @memberof Circle
     */
    avatar: string;

    /**
     * @type {string}
     * @memberof Circle
     */
    urlName: string;

    /**
     * @type {string}
     * @memberof Circle
     */
    cover: string;

    /**
     * @type {string}
     * @memberof Circle
     */
    video: string;

    /**
     * @type {Array<string>}
     * @memberof Circle
     */
    mobilizers: Array<string>;

    /**
     * @type {Array<string>}
     * @memberof Circle
     */
    ambassadors: Array<string>;

    /**
     * @type {Array<string>}
     * @memberof Circle
     */
    partners: Array<string>;

    /**
     * @type {Date}
     * @memberof Circle
     */
    customCreatedAt: Date;

    /**
     * @type {Array<string>}
     * @memberof Circle
     */
    supporters: Array<string>;

    /**
     * @type {boolean}
     * @memberof Circle
     */
    isActive: boolean;

    /**
     * @type {string}
     * @memberof Circle
     */
    mailHeader: string;

    /**
     * @type {Array<User>}
     * @memberof Circle
     */
    users: Array<User>;

    /**
     * @type {Array<string>}
     * @memberof Circle
     */
    badges: Array<CircleBadgesEnum>;

    /**
     * @type {Array<ActionProposal>}
     * @memberof Circle
     */
    proposals: Array<ActionProposal>;

    /**
     * @type {number}
     * @memberof Circle
     */
    subscriptionGoal: number;

    /**
     * @type {Array<string>}
     * @memberof Circle
     */
    supportingOrganizations: Array<string>;

    /**
     * @type {string}
     * @memberof Circle
     */
    circleType: CircleCircleTypeEnum;

    /**
     * @type {Array<any>}
     * @memberof Circle
     */
    tags: Array<any>;

    /**
     * @type {string}
     * @memberof Circle
     */
    id: string;

    /**
     * @type {CircleType}
     * @memberof Circle
     */
    type: CircleType;

    /**
     * @type {User}
     * @memberof Circle
     */
    user: User;

    /**
     * @type {Array<User>}
     * @memberof Circle
     */
    mobilizers: Array<User>;

    /**
     * @type {Array<User>}
     * @memberof Circle
     */
    supporters: Array<User>;

    /**
     * @type {Array<User>}
     * @memberof Circle
     */
    ambassadors: Array<User>;

    /**
     * @type {number}
     * @memberof Circle
     */
    ambassadorsCount: number;

    /**
     * @type {Array<User>}
     * @memberof Circle
     */
    partners: Array<User>;

    /**
     * @type {number}
     * @memberof Circle
     */
    partnersCount: number;

    /**
     * @type {number}
     * @memberof Circle
     */
    supportersCount: number;

    /**
     * @type {number}
     * @memberof Circle
     */
    mobilizersCount: number;

    /**
     * @type {Date}
     * @memberof Circle
     */
    createdAt: Date;

    /**
     * @type {Date}
     * @memberof Circle
     */
    updatedAt: Date;

    /**
     * @type {number}
     * @memberof Circle
     */
    activeCampaigners: number;

    /**
     * @type {boolean}
     * @memberof Circle
     */
    isPayoutEnabled: boolean;
}

/**
 * @export
 * @enum {string}
 */
export enum CircleBadgesEnum {
    Bronze = 'Bronze',
    Silver = 'Silver',
    Gold = 'Gold'
}
/**
 * @export
 * @enum {string}
 */
export enum CircleCircleTypeEnum {
    ForestLand = 'Forest & Land',
    Governance = 'Governance',
    Power = 'Power',
    CircularEconomy = 'Circular Economy',
    Finance = 'Finance',
    EnergyTransition = 'Energy Transition',
    NatureRestoration = 'Nature Restoration',
    OceanProtection = 'Ocean Protection',
    RenewableEnergy = 'Renewable Energy',
    HumanRights = 'Human Rights',
    ClimateJustice = 'Climate Justice',
    Adaptation = 'Adaptation',
    EscazuAgreement = 'Escazu Agreement',
    LandProtection = 'Land Protection',
    Reforestation = 'Reforestation',
    Greenwashing = 'Greenwashing',
    WaterProtection = 'Water Protection',
    SustainableFinance = 'Sustainable Finance'
}

